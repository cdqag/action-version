name: Version
description: Get the next SemVer version based Conventional Commits

author: "CDQ AG"
branding:
  icon: 'arrow-up-circle'
  color: 'red'

inputs:
  pep440-compliant:
    description: 'Should next version be PEP440 compliant'
    default: 'false'

outputs:
  current-version:
    description: 'The current version'
    value: ${{ steps.set.outputs.current-version }}

  new-major-version:
    description: 'The next major version'
    value: ${{ steps.set.outputs.new-major-version }}
    
  new-version:
    description: 'The next version'
    value: ${{ steps.set.outputs.new-version }}

runs:
  using: 'composite'
  steps:
    - name: Get Next Version
      id: semver
      uses: ietf-tools/semver-action@v1
      with:
        token: ${{ github.token }}
        branch: ${{ github.head_ref || github.ref_name }}
        noVersionBumpBehavior: patch

    - name: Set Outputs
      id: set
      shell: bash
      env:
        BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        PEP440_COMPLIANT: ${{ inputs.pep440-compliant }}
        CURRENT_VERSION: ${{ steps.semver.outputs.current }}
        NEXT_VERSION: ${{ steps.semver.outputs.nextStrict }}
        NEXT_MAJOR_VERSION: ${{ steps.semver.outputs.nextMajorStrict }}
      run: |
        echo "current-version=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"
        echo "CURRENT_VERSION=$CURRENT_VERSION" >> "$GITHUB_ENV"

        echo "new-major-version=$NEXT_MAJOR_VERSION" >> "$GITHUB_OUTPUT"
        echo "NEW_MAJOR_VERSION=$NEXT_MAJOR_VERSION" >> "$GITHUB_ENV"

        if [[ "$BRANCH_NAME" != "$DEFAULT_BRANCH" ]]; then
          NEXT_VERSION="$NEXT_VERSION-${GITHUB_SHA:0:8}"
        fi
        
        if [[ "$PEP440_COMPLIANT" == "true" ]]; then
          NEXT_VERSION=$(echo "$NEXT_VERSION" | sed 's/-/+/g')
        fi

        echo "new-version=$NEXT_VERSION" >> "$GITHUB_OUTPUT"
        echo "NEW_VERSION=$NEXT_VERSION" >> "$GITHUB_ENV"
